<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="play_bag" default="true" />
  <arg name="voxel_size" default="0.20" />
  <arg name="voxels_per_side" default="16" />
  <arg name="world_frame" default="uav1/world_origin"/>
  <arg name="mesh_filename" default="tunnel.ply"/>

  <node pkg="tf" type="static_transform_publisher" name="odom_to_voxblox" args="0 0 0 0 0 0 uav1/world_origin voxblox_world 10" />

  <node name="voxblox_node" pkg="voxblox_ros" type="esdf_server" output="screen" args="-alsologtostderr" clear_params="true">
      <remap from="pointcloud" to="/camera/depth_registered/modified/points"/>
      <remap from="voxblox_node/esdf_map_out" to="esdf_map" />
      <param name="tsdf_voxel_size" value="$(arg voxel_size)" />
      <param name="tsdf_voxels_per_side" value="$(arg voxels_per_side)" />
      <param name="publish_esdf_map" value="true" />
      <param name="publish_pointclouds" value="true" />
      <param name="publish_publish_scene_mesh" value="true" />
      <param name="use_tf_transforms" value="true" />
      <param name="update_mesh_every_n_sec" value="1.0" />
      <param name="clear_sphere_for_planning" value="true" />
      <param name="max_ray_length_m" value="15.0" />
      <!-- <param name="world_frame" value="$(arg world_frame)" /> -->
      <param name="world_frame" value="voxblox_world" />

      <param name="method" value="simple" />
      <!-- <param name="method" value="fast" /> -->

      <param name="generate_mesh" value="true" />
      <param name="output_mesh_as_pcl_mesh" value="true" />
      <param name="output_mesh_as_pointcloud" value="true" />
      <!-- <param name="mesh_filename" value="$(find voxblox_ros)/mesh_results/tunnel.ply" /> -->
      <param name="mesh_filename" value="$(arg mesh_filename)" />
    </node>

</launch>
